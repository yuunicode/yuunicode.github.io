---
title: "Ch2. Visualizing Time Series Data"
toc: true
toc_sticky: true
toc_label: "MYSELF"
---

### ts object  
A time series is stored in a ts object in R:  
- a list of numbers  
- information about times thoses numbers were recorded.  

ts() 문법:  
> ts(data, start, frequency, ...)  

요소:  
- data: 이 numerical 벡터에 데이터를 넣는다.  
- start: 시작하는 년도(starting year). 월초부터 시작하는 것이 아니면 start = c(2003, 2) 이런 식으로 컬럼을 넣어준다.  
- frequency: 년도 별로 한 번의 데이터가 아니면 넣어줌.  

이제 예시를 보자.  

- Annual data with 1 Obs **per year**,  
> y <- ts(c(123, 79, 38, 52, 100), start=2012)  
이 경우는 일년에 한번이기 때문에 c(start_year)만 넣어주면 된다. 하지만 일년에 한번의 관측치가 아니면,  

- Annual data with more than 1 Obs **per year**,  
> y <- ts(z, start=2003, frequency=12)  
주기를 넣어주면 된다. **오브젝트에 계속 넣어줘야하는 요소로 겁나 중요함**.  

### Frequency Table
|Data|Frequency|start example|
|:---|---:|:---|
|Annual|1|1995|
|Quarterly|4|c(1995,2) //2분기부터 시작|
|Monthly|12|c(1995, 9) //9월부터 시작|
|Weekly|52 (365.25/7=52.18)|c(1995, 23)|
|daily| 7 (weekly seasonality), 365.25 (annual seasonality)|1 or c(1995,234)| 
|minute| 60 (hourly seasonality), 1440 (daily seasonality 60 * 24), 10080 (weekly seasonality 60 * 24 * 7), 525960 (annual 60 * 24 * 365.25) | 

### Time series Patterns  
크게 Trend, Seasonal, Cyclic이 있다.  

**Trend**  
- Long-term (긴 기간)
- Do not have to be linear (선형일 필요 없음)  
- Changing direction: 추세가 바뀔 때  

**Seasonal**  
- fixed and known frequency  
- Monthly sales of antidiabetic drugs - 연말에 가격이 싸지는 것 

**Cyclic**  
- not a fixed frequency  
- usually due to economic conditions, and often related to the 'business cycle'


------
## Plot을 그려보자  

이 책을 기반으로 시계열을 공부해보자. 
가장 기본적으로 **fpp2** 패키지 로드를 하면, **forecast** 나 **ggplot2**를 자동적으로 불러온다.  
> library(fpp2)  
하면 준비 끝. 

### Autoplot() : produce a time plot of the data
#### 예시1) 호주의 GDP  

ausgdp 데이터를 봐보자.  
![image](https://user-images.githubusercontent.com/56739105/163747740-6fbe8b18-1b97-497f-b9b4-c35d798d84b1.png)  

Quantile이 4개로 나눠져있으니 frequency=4, 그리고 시작하는 년도가 1971년도의 3번째 주기니 start=c(1971,3) 으로 설정해주면 된다.  

```R
ausgdpts <- ts(ausgdp, frequency=4, start=c(1971,3))  
autoplot(ausgdpts)
```  
![image](https://user-images.githubusercontent.com/56739105/163750358-f41174d9-141e-4181-b88d-69560d29f38e.png)

계속 increasing하는 추세가 보인다.  

#### 예시2) 항공사 승객 수 

Melsyd를 autoplot해보자. 우선 Melsyd 데이터를 보면,  

![캡처](https://user-images.githubusercontent.com/56739105/163723429-1301d4cf-19c7-45fd-9fcf-439e94fef59d.PNG)

카테고리가 좌석 등급별로 나눠져있는 것을 알 수 있다. 이코노미 부분만 플랏을 해보면, 

```R
autoplot(melsyd[, "Economy.Class"]) + 
     ggtitle("Economy class passengers: Melbourne-Sydney") + 
     xlab("Year") + 
     ylab("Thousands")

```

![캡처](https://user-images.githubusercontent.com/56739105/163723552-810514b0-f722-49e5-9c64-6e4b313afc03.PNG)  

플랏만 보고 해석할 수 있는것은,
- 1989년에 수송객이 없었음 (파업)  
- 1992년에 승객의 감소(이코노미 좌석 중 일부가 비즈니스 좌석으로 교체)  
- 1991년 후반에 눈에띄게 증가 
- 12월에서 1월로 넘어가는 구간에서 크게 하락하는 구간이 있음 (휴가철의 효과같음)  

#### 예시3)당뇨병 약 매출  

a10데이터를 확인해보자.  

![image](https://user-images.githubusercontent.com/56739105/163746297-1fd8ef1f-bcd6-4196-8ea1-b1b4483e22fe.png)

월별로 나눠져있는 시계열데이터인 것을 확인할 수 있다.  

```R
autoplot(a10) + 
     ggtitle("Antidiabetic drug sales") + 
     xlab("$ million") + 
     ylab("Year")

```  

![image](https://user-images.githubusercontent.com/56739105/163746838-4ece3c85-2e61-4765-b33b-d70381361ae2.png)  

계속 증가하는 추세, 즉 Level이 올라가고, Seasonal 패턴도 폭이 커지는 것을 볼 수 있다. 특히 연말에 구입량이 증가하는 이유는 연말에 정부에서 당뇨환자들에게 주는 지원제도가 있기 때문이다.  

#### Your turn  
1) Create plots of the following time series: dole, bricksq, lynx, goog  
2) Use help() to find out about the data in each series.
3) For the last plot, modify the axis labels and title.  

1. dole  
![image](https://user-images.githubusercontent.com/56739105/163751056-c594dc18-9eb8-46e6-877e-f8417c371c27.png)  

```R
dolets <- ts(dole, frequency = 12, start = c(1956))
autoplot(dolets)
```  
![image](https://user-images.githubusercontent.com/56739105/163751967-53f37201-621e-4c56-9ce5-8e9dc5f654ae.png)  

![image](https://user-images.githubusercontent.com/56739105/163751509-aa2239dd-4627-41b5-9e01-338f65a8cc55.png)  

2. bricksq  
```R
help(bricksq) #get info of bricksq
brickts <- ts(bricksq, frequency = 4, start = c(1956))
```
![image](https://user-images.githubusercontent.com/56739105/163751760-d661268d-6837-48ef-8a3f-3d33de27a08c.png)  
확실히 Seasonal 패턴이 있는 것을 볼 수 있다. (삼각형) 중간중간 곤두박질치는 부분도 있다.  

3. lynx  
데이터를 찾아보면, 연간 잡힌 샴들의 개체수라서 간단하게 플롯할 수 있을 것 같다.  

![image](https://user-images.githubusercontent.com/56739105/163752422-f7c05bdd-a375-4ab2-8dd6-df5f60f42472.png)

간단하게 

```R
lynxts <- ts(lynx)
```  
만 해도  

![image](https://user-images.githubusercontent.com/56739105/163755231-8ab660fd-de97-4566-874d-5ff6910012e9.png)

Seasonal 패턴이 잘보인다. 교수님 피셜로는 얘네가 알아서 개체수를 조절한다고 한다.  

4. goog  

![image](https://user-images.githubusercontent.com/56739105/163756278-82823652-cbda-4a63-9497-a03dcd348f41.png)  

![image](https://user-images.githubusercontent.com/56739105/163756326-2ddbca4c-57a1-47a6-80cf-f90af9f43cee.png)

